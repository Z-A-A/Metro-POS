Index: src/main/java/org/ZAA/Controller/METRO_POS_MAIN_CONTROLLER_CODE.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.ZAA.Controller;\r\n\r\nimport java.util.*;\r\n\r\nimport jakarta.annotation.PostConstruct;\r\nimport org.springframework.web.bind.annotation.*;\r\n\r\n\r\n@RestController\r\n@RequestMapping(\"/api\")\r\npublic class METRO_POS_MAIN_CONTROLLER_CODE\r\n{\r\n    private List<SuperAdmin> superAdmins;\r\n    private List<BranchManagement> branches;\r\n\r\n    private List<BranchManager> admins;\r\n    private List<Cashier> cashiers;\r\n    private List<DataEntryOperator> dataEntryOperators;\r\n\r\n    public METRO_POS_MAIN_CONTROLLER_CODE()\r\n    {\r\n        this.superAdmins = new ArrayList<>();\r\n        this.branches = new ArrayList<>();\r\n        this.admins = new ArrayList<>();\r\n        this.cashiers = new ArrayList<>();\r\n        this.dataEntryOperators = new ArrayList<>();\r\n    }\r\n\r\n    @PostConstruct\r\n    public void loadData()\r\n    {\r\n        // LOAD DATA FROM DATABASE INTO LISTS.\r\n        TEST_LOAD_WITHOUT_DB();\r\n        for(SuperAdmin superAdmin: superAdmins)\r\n        {\r\n            System.out.println(superAdmin.getName());\r\n        }\r\n    }\r\n\r\n    public void syncDataToDataBase()\r\n    {\r\n        //STORE DATA COLLECTIONS INTO\r\n    }\r\n\r\n    //TESTING METHOD.\r\n    public void TEST_LOAD_WITHOUT_DB() {\r\n        SuperAdmin superAdmin1 = new SuperAdmin(\"Admin1\", \"admin1@example.com\", \"admin123\");\r\n        superAdmin1.setMainController(this);\r\n        SuperAdmin superAdmin2 = new SuperAdmin(\"Admin2\", \"admin2@example.com\", \"admin123\");\r\n        superAdmin2.setMainController(this);\r\n        superAdmins.add(superAdmin1);\r\n        superAdmins.add(superAdmin2);\r\n        System.out.println(\"SUPER ADMINS LOADED SUCCESSFULLY\");\r\n\r\n        Branch branch1 = new Branch(\"B001\", \"Main Branch\", \"City A\", true, \"123 Street\", \"123-456-7890\");\r\n        BranchManagement branchManagement1 = new BranchManagement(branch1);\r\n        Branch branch2 = new Branch(\"B002\", \"Secondary Branch\", \"City B\", true, \"456 Avenue\", \"987-654-3210\");\r\n        BranchManagement branchManagement2 = new BranchManagement(branch2);\r\n        branches.add(branchManagement1);\r\n        branches.add(branchManagement2);\r\n        System.out.println(\"BRANCHES LOADED SUCCESSFULLY\");\r\n\r\n        BranchManager branchManager1 = new BranchManager(\"Alice\", 101, \"alice@example.com\", \"B001\", 50000.0);\r\n        branchManager1.setMainController(this);\r\n        branchManagement1.addBranchManager(branchManager1);\r\n        admins.add(branchManager1);\r\n\r\n        BranchManager branchManager2 = new BranchManager(\"Bob\", 102, \"bob@example.com\", \"B002\", 55000.0);\r\n        branchManager2.setMainController(this);\r\n        branchManagement2.addBranchManager(branchManager2);\r\n        admins.add(branchManager2);\r\n\r\n        Cashier cashier1 = new Cashier(\"John\", 201, \"john@example.com\", \"B001\", 30000.0);\r\n        branchManagement1.addCashier(cashier1);\r\n        cashiers.add(cashier1);\r\n\r\n        Cashier cashier2 = new Cashier(\"Jane\", 202, \"jane@example.com\", \"B002\", 32000.0);\r\n        branchManagement2.addCashier(cashier2);\r\n        cashiers.add(cashier2);\r\n\r\n        DataEntryOperator dataEntryOperator1 = new DataEntryOperator(\"Charlie\", 301, \"charlie@example.com\", \"B001\", 25000.0);\r\n        branchManagement1.addDataEntryOperator(dataEntryOperator1);\r\n        dataEntryOperators.add(dataEntryOperator1);\r\n\r\n        DataEntryOperator dataEntryOperator2 = new DataEntryOperator(\"David\", 302, \"david@example.com\", \"B002\", 27000.0);\r\n        branchManagement2.addDataEntryOperator(dataEntryOperator2);\r\n        dataEntryOperators.add(dataEntryOperator2);\r\n\r\n        System.out.println(\"BRANCH DATA LOADED SUCCESSFULLY\");\r\n    }\r\n\r\n    //LOGIN METHODS FOR GUI.\r\n\r\n    @GetMapping(\"/login/superadmin\")\r\n    public SuperAdmin loginSuperAdmin(@RequestParam String email, @RequestParam String password) {\r\n        for (SuperAdmin superAdmin : superAdmins)\r\n        {\r\n            if (superAdmin.getEmail().equals(email) && superAdmin.getPassword().equals(password)) {\r\n                System.out.println(\"SUPER ADMIN LOGIN SUCCESSFUL\");\r\n                return superAdmin;\r\n            }\r\n        }\r\n        System.out.println(\"SUPER ADMIN LOGIN FAILED\");\r\n        return null;\r\n    }\r\n\r\n    @GetMapping(\"/login/admin\")\r\n    public BranchManager loginAdmin(@RequestParam String email, @RequestParam String password) {\r\n        for (BranchManager admin : admins) {\r\n            if (admin.getEmail().equals(email) && admin.getPassword().equals(password)) {\r\n                System.out.println(\"BRANCH MANAGER LOGIN SUCCESSFUL\");\r\n                return admin;\r\n            }\r\n        }\r\n        System.out.println(\"BRANCH MANAGER LOGIN FAILED\");\r\n        return null;\r\n    }\r\n\r\n    @GetMapping(\"/login/cashier\")\r\n    public Cashier loginCashier(@RequestParam String email, @RequestParam String password) {\r\n        for (Cashier cashier : cashiers) {\r\n            if (cashier.getEmail().equals(email) && cashier.getPassword().equals(password)) {\r\n                System.out.println(\"CASHIER LOGIN SUCCESSFUL\");\r\n                return cashier;\r\n            }\r\n        }\r\n        System.out.println(\"CASHIER LOGIN FAILED\");\r\n        return null;\r\n    }\r\n\r\n    @GetMapping(\"/login/dataentryoperator\")\r\n    public DataEntryOperator loginDataEntryOperator(@RequestParam String email, @RequestParam String password) {\r\n        for (DataEntryOperator dataEntryOperator : dataEntryOperators) {\r\n            if (dataEntryOperator.getEmail().equals(email) && dataEntryOperator.getPassword().equals(password)) {\r\n                System.out.println(\"DATA ENTRY OPERATOR LOGIN SUCCESSFUL\");\r\n                return dataEntryOperator;\r\n            }\r\n        }\r\n        System.out.println(\"DATA ENTRY OPERATOR LOGIN FAILED\");\r\n        return null;\r\n    }\r\n\r\n    //SIGN UP METHODS FOR GUI.\r\n\r\n    public void signUpSuperAdmin() {\r\n        Scanner scanner = new Scanner(System.in);\r\n        System.out.print(\"Enter Super Admin Name: \");\r\n        String name = scanner.nextLine();\r\n        System.out.print(\"Enter Super Admin Email: \");\r\n        String email = scanner.nextLine();\r\n        System.out.print(\"Enter Super Admin Password: \");\r\n        String password = scanner.nextLine();\r\n        SuperAdmin newSuperAdmin = new SuperAdmin(name, email, password);\r\n        superAdmins.add(newSuperAdmin);\r\n        // ALSO ADD IN DATABASEEE HERE==============================\r\n        System.out.println(\"SUPER ADMIN SIGN UP SUCCESSFUL: \" + newSuperAdmin.getName());\r\n    }\r\n\r\n    @PostMapping(\"/signup/branchmanager\")\r\n    public boolean signUpBranchManager(@RequestParam String name, @RequestParam String email, @RequestParam String password, @RequestParam String branchCode, @RequestParam double salary) {\r\n        BranchManager newBranchManager = new BranchManager(name, admins.size() + 1, email, branchCode, salary);\r\n        admins.add(newBranchManager);\r\n        // ALSO ADD IN DATABASEEE HERE ===============================\r\n        System.out.println(\"ADMIN (BRANCH MANAGER) ADDED SUCCESSFULLY: \" + newBranchManager.getName());\r\n        return true;\r\n    }\r\n\r\n    @PostMapping(\"/signup/cashier\")\r\n    public boolean signUpCashier(@RequestParam String name, @RequestParam String email, @RequestParam String password, @RequestParam String branchCode, @RequestParam double salary) {\r\n        Cashier newCashier = new Cashier(name, cashiers.size() + 1, email, branchCode, salary);\r\n        cashiers.add(newCashier);\r\n        // ALSO ADD IN DATABASEEEEE HERE ===============================\r\n        System.out.println(\"CASHIER ADDED SUCCESSFULLY: \" + newCashier.getName());\r\n        return true;\r\n    }\r\n\r\n    @PostMapping(\"/signup/dataentryoperator\")\r\n    public boolean signUpDataEntryOperator(@RequestParam String name, @RequestParam String email, @RequestParam String password, @RequestParam String branchCode, @RequestParam double salary) {\r\n        DataEntryOperator newDataEntryOperator = new DataEntryOperator(name, dataEntryOperators.size() + 1, email, branchCode, salary);\r\n        dataEntryOperators.add(newDataEntryOperator);\r\n        // ALSO ADD IN DATABASEEE HERE ===============================\r\n        System.out.println(\"DATA ENTRY OPERATOR ADDED SUCCESSFULLY: \" + newDataEntryOperator.getName());\r\n        return true;\r\n    }\r\n\r\n    //PASSWORD CHANGE METHODS FOR GUI.\r\n\r\n    @PostMapping(\"/changePassword/superadmin\")\r\n    public boolean changeSuperAdminPassword(@RequestParam String email, @RequestParam String oldPassword, @RequestParam String newPassword) {\r\n        for (SuperAdmin superAdmin : superAdmins) {\r\n            if (superAdmin.getEmail().equals(email) && superAdmin.getPassword().equals(oldPassword)) {\r\n                superAdmin.setPassword(newPassword);\r\n                //CHANGE IN DB HERE==============================\r\n                System.out.println(\"SUPER ADMIN PASSWORD CHANGED SUCCESSFULLY\");\r\n                return true;\r\n            }\r\n        }\r\n        System.out.println(\"SUPER ADMIN PASSWORD CHANGE FAILED\");\r\n        return false;\r\n    }\r\n\r\n    @PostMapping(\"/changePassword/branchmanager\")\r\n    public boolean changeBranchManagerPassword(@RequestParam String email, @RequestParam String oldPassword, @RequestParam String newPassword) {\r\n        for (BranchManager admin : admins) {\r\n            if (admin.getEmail().equals(email) && admin.getPassword().equals(oldPassword)) {\r\n                admin.setPassword(newPassword);\r\n                //CHANGE IN DB HERE==============================\r\n                System.out.println(\"BRANCH MANAGER PASSWORD CHANGED SUCCESSFULLY\");\r\n                return true;\r\n            }\r\n        }\r\n        System.out.println(\"BRANCH MANAGER PASSWORD CHANGE FAILED\");\r\n        return false;\r\n    }\r\n\r\n    @PostMapping(\"/changePassword/cashier\")\r\n    public boolean changeCashierPassword(@RequestParam String email, @RequestParam String oldPassword, @RequestParam String newPassword) {\r\n        for (Cashier cashier : cashiers) {\r\n            if (cashier.getEmail().equals(email) && cashier.getPassword().equals(oldPassword)) {\r\n                cashier.setPassword(newPassword);\r\n                //CHANGE IN DB HERE==============================\r\n                System.out.println(\"CASHIER PASSWORD CHANGED SUCCESSFULLY\");\r\n                return true;\r\n            }\r\n        }\r\n        System.out.println(\"CASHIER PASSWORD CHANGE FAILED\");\r\n        return false;\r\n    }\r\n\r\n    @PostMapping(\"/changePassword/dataentryoperator\")\r\n    public boolean changeDataEntryOperatorPassword(@RequestParam String email, @RequestParam String oldPassword, @RequestParam String newPassword) {\r\n        for (DataEntryOperator dataEntryOperator : dataEntryOperators) {\r\n            if (dataEntryOperator.getEmail().equals(email) && dataEntryOperator.getPassword().equals(oldPassword)) {\r\n                dataEntryOperator.setPassword(newPassword);\r\n                //CHANGE IN DB HERE==============================\r\n                System.out.println(\"DATA ENTRY OPERATOR PASSWORD CHANGED SUCCESSFULLY\");\r\n                return true;\r\n            }\r\n        }\r\n        System.out.println(\"DATA ENTRY OPERATOR PASSWORD CHANGE FAILED\");\r\n        return false;\r\n    }\r\n\r\n    public List<BranchManager> getAdmins() {\r\n        return admins;\r\n    }\r\n\r\n    public void setAdmins(List<BranchManager> admins) {\r\n        this.admins = admins;\r\n    }\r\n\r\n    public List<BranchManagement> getBranches() {\r\n        return branches;\r\n    }\r\n\r\n    public void setBranches(List<BranchManagement> branches) {\r\n        this.branches = branches;\r\n    }\r\n\r\n    public List<Cashier> getCashiers() {\r\n        return cashiers;\r\n    }\r\n\r\n    public void setCashiers(List<Cashier> cashiers) {\r\n        this.cashiers = cashiers;\r\n    }\r\n\r\n    public List<DataEntryOperator> getDataEntryOperators() {\r\n        return dataEntryOperators;\r\n    }\r\n\r\n    public void setDataEntryOperators(List<DataEntryOperator> dataEntryOperators) {\r\n        this.dataEntryOperators = dataEntryOperators;\r\n    }\r\n\r\n    public List<SuperAdmin> getSuperAdmins() {\r\n        return superAdmins;\r\n    }\r\n\r\n    public void setSuperAdmins(List<SuperAdmin> superAdmins) {\r\n        this.superAdmins = superAdmins;\r\n    }\r\n\r\n    public static void main(String[] args)\r\n    {\r\n        METRO_POS_MAIN_CONTROLLER_CODE controller = new METRO_POS_MAIN_CONTROLLER_CODE();\r\n\r\n        controller.loadData();\r\n\r\n        Scanner scanner = new Scanner(System.in);\r\n\r\n        while (true)\r\n        {\r\n            System.out.println(\"========= WELCOME TO METRO POS SYSTEM =========\");\r\n            System.out.println(\"1. Login as Super Admin\");\r\n            System.out.println(\"2. Login as Branch Manager\");\r\n            System.out.println(\"3. Login as Cashier\");\r\n            System.out.println(\"4. Login as Data Entry Operator\");\r\n            System.out.println(\"5. Exit\");\r\n            System.out.print(\"Enter your choice: \");\r\n            int choice = scanner.nextInt();\r\n            scanner.nextLine();\r\n\r\n            switch (choice)\r\n            {\r\n                case 1:\r\n                    System.out.println(\"Enter Super Admin Email: \");\r\n                    String superAdminEmail = scanner.nextLine();\r\n                    System.out.println(\"Enter Super Admin Password: \");\r\n                    String superAdminPassword = scanner.nextLine();\r\n                    SuperAdmin superAdmin = controller.loginSuperAdmin(superAdminEmail, superAdminPassword);\r\n\r\n                    if (superAdmin != null)\r\n                    {\r\n                        System.out.println(\"1. Create Branch\");\r\n                        System.out.println(\"2. Add Branch Manager\");\r\n                        System.out.println(\"3. Add Cashier\");\r\n                        System.out.println(\"4. Add Data Entry Operator\");\r\n                        System.out.println(\"5. Logout\");\r\n                        System.out.print(\"Enter your choice: \");\r\n                        int superAdminChoice = scanner.nextInt();\r\n                        scanner.nextLine();\r\n\r\n                        switch (superAdminChoice)\r\n                        {\r\n                            case 1:\r\n                                System.out.println(\"Enter Branch Code: \");\r\n                                String branchCode = scanner.nextLine();\r\n                                System.out.println(\"Enter Branch Name: \");\r\n                                String branchName = scanner.nextLine();\r\n                                System.out.println(\"Enter Branch City: \");\r\n                                String branchCity = scanner.nextLine();\r\n                                System.out.println(\"Enter Branch Address: \");\r\n                                String branchAddress = scanner.nextLine();\r\n                                System.out.println(\"Enter Branch Phone: \");\r\n                                String branchPhone = scanner.nextLine();\r\n                                System.out.println(\"Is the branch active? (true/false): \");\r\n                                boolean branchActive = scanner.nextBoolean();\r\n                                superAdmin.createBranch(branchCode, branchName, branchCity, branchActive, branchAddress, branchPhone);\r\n                                break;\r\n                            case 2:\r\n                                System.out.println(\"Enter Name: \");\r\n                                String adminName = scanner.nextLine();\r\n                                System.out.println(\"Enter Email: \");\r\n                                String adminEmail = scanner.nextLine();\r\n                                System.out.println(\"Enter Password: \");\r\n                                String adminPassword = scanner.nextLine();\r\n                                System.out.println(\"Enter Branch Code: \");\r\n                                String adminBranchCode = scanner.nextLine();\r\n                                System.out.println(\"Enter Salary: \");\r\n                                double adminSalary = scanner.nextDouble();\r\n                                controller.signUpBranchManager(adminName, adminEmail, adminPassword, adminBranchCode, adminSalary);\r\n                                break;\r\n                            case 3:\r\n                                System.out.println(\"Enter Name: \");\r\n                                String cashierName = scanner.nextLine();\r\n                                System.out.println(\"Enter Email: \");\r\n                                String cashierEmail = scanner.nextLine();\r\n                                System.out.println(\"Enter Password: \");\r\n                                String cashierPassword = scanner.nextLine();\r\n                                System.out.println(\"Enter Branch Code: \");\r\n                                String cashierBranchCode = scanner.nextLine();\r\n                                System.out.println(\"Enter Salary: \");\r\n                                double cashierSalary = scanner.nextDouble();\r\n                                controller.signUpCashier(cashierName, cashierEmail, cashierPassword, cashierBranchCode, cashierSalary);\r\n                                break;\r\n                            case 4:\r\n                                System.out.println(\"Enter Name: \");\r\n                                String dataEntryName = scanner.nextLine();\r\n                                System.out.println(\"Enter Email: \");\r\n                                String dataEntryEmail = scanner.nextLine();\r\n                                System.out.println(\"Enter Password: \");\r\n                                String dataEntryPassword = scanner.nextLine();\r\n                                System.out.println(\"Enter Branch Code: \");\r\n                                String dataEntryBranchCode = scanner.nextLine();\r\n                                System.out.println(\"Enter Salary: \");\r\n                                double dataEntrySalary = scanner.nextDouble();\r\n                                controller.signUpDataEntryOperator(dataEntryName, dataEntryEmail, dataEntryPassword, dataEntryBranchCode, dataEntrySalary);\r\n                                break;\r\n                            case 5:\r\n                                System.out.println(\"Logging out...\");\r\n                                break;\r\n                            default:\r\n                                System.out.println(\"Invalid choice.\");\r\n                        }\r\n                    }\r\n                    break;\r\n\r\n                case 2:\r\n                    System.out.println(\"Enter Branch Manager Email: \");\r\n                    String managerEmail = scanner.nextLine();\r\n                    System.out.println(\"Enter Branch Manager Password: \");\r\n                    String managerPassword = scanner.nextLine();\r\n                    BranchManager branchManager = controller.loginAdmin(managerEmail, managerPassword);\r\n\r\n                    if (branchManager != null) {\r\n                        System.out.println(\"1. Add Cashier\");\r\n                        System.out.println(\"2. Add Data Entry Operator\");\r\n                        System.out.println(\"3. Logout\");\r\n                        System.out.print(\"Enter your choice: \");\r\n                        int managerChoice = scanner.nextInt();\r\n                        scanner.nextLine();\r\n\r\n                        switch (managerChoice) {\r\n                            case 1:\r\n                                System.out.println(\"Enter Name: \");\r\n                                String cashierNameBM = scanner.nextLine();\r\n                                System.out.println(\"Enter Email: \");\r\n                                String cashierEmailBM = scanner.nextLine();\r\n                                System.out.println(\"Enter Password: \");\r\n                                String cashierPasswordBM = scanner.nextLine();\r\n                                System.out.println(\"Enter Salary: \");\r\n                                double cashierSalaryBM = scanner.nextDouble();\r\n                                branchManager.addCashier(cashierNameBM, cashierEmailBM, cashierPasswordBM, cashierSalaryBM);\r\n                                break;\r\n                            case 2:\r\n                                System.out.println(\"Enter Name: \");\r\n                                String dataEntryNameBM = scanner.nextLine();\r\n                                System.out.println(\"Enter Email: \");\r\n                                String dataEntryEmailBM = scanner.nextLine();\r\n                                System.out.println(\"Enter Password: \");\r\n                                String dataEntryPasswordBM = scanner.nextLine();\r\n                                System.out.println(\"Enter Salary: \");\r\n                                double dataEntrySalaryBM = scanner.nextDouble();\r\n                                branchManager.addDataEntryOperator(dataEntryNameBM, dataEntryEmailBM, dataEntryPasswordBM, dataEntrySalaryBM);\r\n                                break;\r\n                            case 3:\r\n                                System.out.println(\"Logging out...\");\r\n                                break;\r\n                            default:\r\n                                System.out.println(\"Invalid choice.\");\r\n                        }\r\n                    }\r\n                    break;\r\n\r\n                case 3:\r\n                    System.out.println(\"Enter Cashier Email: \");\r\n                    String cashierEmailLogin = scanner.nextLine();\r\n                    System.out.println(\"Enter Cashier Password: \");\r\n                    String cashierPasswordLogin = scanner.nextLine();\r\n                    Cashier cashier = controller.loginCashier(cashierEmailLogin, cashierPasswordLogin);\r\n\r\n                    if (cashier != null) {\r\n                        System.out.println(\"Functionality to be implemented.\");\r\n                    }\r\n                    break;\r\n\r\n                case 4:\r\n                    System.out.println(\"Enter Data Entry Operator Email: \");\r\n                    String dataEntryEmailLogin = scanner.nextLine();\r\n                    System.out.println(\"Enter Data Entry Operator Password: \");\r\n                    String dataEntryPasswordLogin = scanner.nextLine();\r\n                    DataEntryOperator dataEntryOperator = controller.loginDataEntryOperator(dataEntryEmailLogin, dataEntryPasswordLogin);\r\n\r\n                    if (dataEntryOperator != null) {\r\n                        System.out.println(\"Functionality to be implemented.\");\r\n                    }\r\n                    break;\r\n\r\n                case 5:\r\n                    System.out.println(\"Exiting...\");\r\n                    return;\r\n\r\n                default:\r\n                    System.out.println(\"Invalid choice.\");\r\n            }\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/ZAA/Controller/METRO_POS_MAIN_CONTROLLER_CODE.java b/src/main/java/org/ZAA/Controller/METRO_POS_MAIN_CONTROLLER_CODE.java
--- a/src/main/java/org/ZAA/Controller/METRO_POS_MAIN_CONTROLLER_CODE.java	(revision ee8c4d4f3bca8d1e7cbe0979afdd8d863056068b)
+++ b/src/main/java/org/ZAA/Controller/METRO_POS_MAIN_CONTROLLER_CODE.java	(date 1732984898692)
@@ -31,11 +31,14 @@
     {
         // LOAD DATA FROM DATABASE INTO LISTS.
         TEST_LOAD_WITHOUT_DB();
-        for(SuperAdmin superAdmin: superAdmins)
-        {
-            System.out.println(superAdmin.getName());
-        }
+        branchManagementLoadDataSetup();
+    }
+
+    public void branchManagementLoadDataSetup()
+    {
+        //
     }
+
 
     public void syncDataToDataBase()
     {
Index: src/main/java/org/ZAA/Controller/SuperAdmin.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.ZAA.Controller;\r\n\r\nimport java.util.List;\r\nimport org.springframework.web.bind.annotation.*;\r\n\r\n@RestController\r\n@RequestMapping(\"/api\")\r\npublic class SuperAdmin\r\n{\r\n    private String name;\r\n    private String email;\r\n    private String password;\r\n    private METRO_POS_MAIN_CONTROLLER_CODE mainController;\r\n\r\n    public SuperAdmin()\r\n    {\r\n\r\n    }\r\n\r\n    public SuperAdmin(String name, String email, String password)\r\n    {\r\n        this.name = name;\r\n        this.email = email;\r\n        this.password = password;\r\n    }\r\n\r\n    public String getName()\r\n    {\r\n        return name;\r\n    }\r\n\r\n    public String getEmail()\r\n    {\r\n        return email;\r\n    }\r\n\r\n    public String getPassword()\r\n    {\r\n        return password;\r\n    }\r\n\r\n    public void setEmail(String email) {\r\n        this.email = email;\r\n    }\r\n\r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n\r\n    public void setPassword(String password) {\r\n        this.password = password;\r\n    }\r\n\r\n    public void setMainController(METRO_POS_MAIN_CONTROLLER_CODE mainController) {\r\n        this.mainController = mainController;\r\n    }\r\n\r\n    @PostMapping(\"/createBranch\")\r\n    public boolean createBranch(@RequestParam String branchCode, @RequestParam String name, @RequestParam String city, @RequestParam Boolean isActive, @RequestParam String address, @RequestParam String phone) {\r\n        Branch newBranch = new Branch(branchCode, name, city, isActive, address, phone);\r\n        BranchManagement newBranchManagement = new BranchManagement(newBranch);\r\n        mainController.getBranches().add(newBranchManagement);\r\n        //UPDATE IN DB HERE\r\n        System.out.println(\"BRANCH CREATED SUCCESSFULLY: \" + name);\r\n        return true;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/ZAA/Controller/SuperAdmin.java b/src/main/java/org/ZAA/Controller/SuperAdmin.java
--- a/src/main/java/org/ZAA/Controller/SuperAdmin.java	(revision ee8c4d4f3bca8d1e7cbe0979afdd8d863056068b)
+++ b/src/main/java/org/ZAA/Controller/SuperAdmin.java	(date 1732984720994)
@@ -64,4 +64,8 @@
         System.out.println("BRANCH CREATED SUCCESSFULLY: " + name);
         return true;
     }
+
+
+
+
 }
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"4ea2db64-6a30-4e9f-adef-6222c9bc4c94\" name=\"Changes\" comment=\"Implemented Backend Object classes and Login, Signup and Branch creation functions.\">\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/org/ZAA/Controller/BACKEND_SERVER.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/pom.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/pom.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/ZAA/Controller/Bill.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/ZAA/Controller/Bill.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/ZAA/Controller/Branch.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/ZAA/Controller/Branch.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/ZAA/Controller/BranchManagement.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/ZAA/Controller/BranchManagement.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/ZAA/Controller/BranchManager.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/ZAA/Controller/BranchManager.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/ZAA/Controller/Cashier.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/ZAA/Controller/Cashier.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/ZAA/Controller/DataEntryOperator.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/ZAA/Controller/DataEntryOperator.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/ZAA/Controller/METRO_POS_MAIN_CONTROLLER_CODE.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/ZAA/Controller/METRO_POS_MAIN_CONTROLLER_CODE.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/ZAA/Controller/Product.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/ZAA/Controller/Product.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/ZAA/Controller/Report.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/ZAA/Controller/Report.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/ZAA/Controller/SuperAdmin.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/ZAA/Controller/SuperAdmin.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/ZAA/Controller/Vendor.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/ZAA/Controller/Vendor.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n        <option value=\"HTML File\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"ROOT_SYNC\" value=\"DONT_SYNC\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;AzfarNayyan&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/Z-A-A/Metro-POS&quot;,\r\n    &quot;accountId&quot;: &quot;6a738e78-ce0f-4b46-9663-9fcc85490c13&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProblemsViewState\">\r\n    <hideBySeverity>\r\n      <option value=\"300\" />\r\n    </hideBySeverity>\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 1\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2p72oZI34oyr1h0dWF33ko4Hca1\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Application.METRO_POS_MAIN_CONTROLLER_CODE.executor\": \"Run\",\r\n    \"Application.Main.executor\": \"Run\",\r\n    \"DefaultHtmlFileTemplate\": \"HTML File\",\r\n    \"JavaScript Debug.test.html.executor\": \"Run\",\r\n    \"RequestMappingsPanelOrder0\": \"0\",\r\n    \"RequestMappingsPanelOrder1\": \"1\",\r\n    \"RequestMappingsPanelWidth0\": \"75\",\r\n    \"RequestMappingsPanelWidth1\": \"75\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"Spring Boot.BACKEND_APPLICATION_SERVER.executor\": \"Run\",\r\n    \"Spring Boot.BACKEND_SERVER.executor\": \"Run\",\r\n    \"Spring Boot.METRO_POS_MAIN_CONTROLLER_CODE.executor\": \"Run\",\r\n    \"git-widget-placeholder\": \"azfar\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"project.structure.last.edited\": \"SDKs\",\r\n    \"project.structure.proportion\": \"0.0\",\r\n    \"project.structure.side.proportion\": \"0.2\",\r\n    \"run.configurations.included.in.services\": \"true\",\r\n    \"settings.editor.selected.configurable\": \"preferences.pluginManager\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RunDashboard\">\r\n    <option name=\"configurationTypes\">\r\n      <set>\r\n        <option value=\"KtorApplicationConfigurationType\" />\r\n        <option value=\"MicronautRunConfigurationType\" />\r\n        <option value=\"QuarkusRunConfigurationType\" />\r\n        <option value=\"SpringBootApplicationConfigurationType\" />\r\n      </set>\r\n    </option>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Spring Boot.BACKEND_SERVER\">\r\n    <configuration name=\"METRO_POS_MAIN_CONTROLLER_CODE\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.ZAA.Controller.METRO_POS_MAIN_CONTROLLER_CODE\" />\r\n      <module name=\"METRO-POS\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.ZAA.Controller.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"test.html\" type=\"JavascriptDebugType\" temporary=\"true\" nameIsGenerated=\"true\" uri=\"http://localhost:63342/Metro-POS/org/ZAA/static/test.html\" useBuiltInWebServerPort=\"true\">\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"BACKEND_APPLICATION_SERVER\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"FRAME_DEACTIVATION_UPDATE_POLICY\" value=\"UpdateClassesAndResources\" />\r\n      <module name=\"METRO-POS\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"org.ZAA.Controller.BACKEND_APPLICATION_SERVER\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.ZAA.Controller.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"BACKEND_SERVER\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"FRAME_DEACTIVATION_UPDATE_POLICY\" value=\"UpdateClassesAndResources\" />\r\n      <module name=\"METRO-POS\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"org.ZAA.Controller.BACKEND_SERVER\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.ZAA.Controller.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"METRO_POS_MAIN_CONTROLLER_CODE\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"FRAME_DEACTIVATION_UPDATE_POLICY\" value=\"UpdateClassesAndResources\" />\r\n      <module name=\"METRO-POS\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"org.ZAA.Controller.METRO_POS_MAIN_CONTROLLER_CODE\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.ZAA.Controller.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Spring Boot.BACKEND_SERVER\" />\r\n        <item itemvalue=\"JavaScript Debug.test.html\" />\r\n        <item itemvalue=\"Spring Boot.METRO_POS_MAIN_CONTROLLER_CODE\" />\r\n        <item itemvalue=\"Spring Boot.BACKEND_APPLICATION_SERVER\" />\r\n        <item itemvalue=\"Application.METRO_POS_MAIN_CONTROLLER_CODE\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-jdk-9823dce3aa75-28b599e66164-intellij.indexing.shared.core-IU-242.23339.11\" />\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-5c90d61e3bab-JavaScript-IU-242.23339.11\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"4ea2db64-6a30-4e9f-adef-6222c9bc4c94\" name=\"Changes\" comment=\"\" />\r\n      <created>1732102970755</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1732102970755</updated>\r\n      <workItem from=\"1732102971788\" duration=\"1421000\" />\r\n      <workItem from=\"1732104456965\" duration=\"5841000\" />\r\n      <workItem from=\"1732119092361\" duration=\"10000\" />\r\n      <workItem from=\"1732292966594\" duration=\"4843000\" />\r\n      <workItem from=\"1732298206131\" duration=\"6452000\" />\r\n      <workItem from=\"1732308284648\" duration=\"5000\" />\r\n      <workItem from=\"1732393566545\" duration=\"252000\" />\r\n      <workItem from=\"1732470352276\" duration=\"10000\" />\r\n      <workItem from=\"1732550134915\" duration=\"9915000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Implemented Backend Object classes and Login, Signup and Branch creation functions.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732110897573</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732110897573</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Implemented Backend Object classes and Login, Signup and Branch creation functions.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732111312955</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732111312955</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"3\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"origin/azfar\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Implemented Backend Object classes and Login, Signup and Branch creation functions.\" />\r\n    <MESSAGE value=\"Implemented backend REST api functions and converted previously developed.\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Implemented backend REST api functions and converted previously developed.\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision ee8c4d4f3bca8d1e7cbe0979afdd8d863056068b)
+++ b/.idea/workspace.xml	(date 1732984707471)
@@ -5,21 +5,9 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="4ea2db64-6a30-4e9f-adef-6222c9bc4c94" name="Changes" comment="Implemented Backend Object classes and Login, Signup and Branch creation functions.">
-      <change afterPath="$PROJECT_DIR$/src/main/java/org/ZAA/Controller/BACKEND_SERVER.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/ZAA/Controller/Bill.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/ZAA/Controller/Bill.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/ZAA/Controller/Branch.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/ZAA/Controller/Branch.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/ZAA/Controller/BranchManagement.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/ZAA/Controller/BranchManagement.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/ZAA/Controller/BranchManager.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/ZAA/Controller/BranchManager.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/ZAA/Controller/Cashier.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/ZAA/Controller/Cashier.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/ZAA/Controller/DataEntryOperator.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/ZAA/Controller/DataEntryOperator.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/ZAA/Controller/METRO_POS_MAIN_CONTROLLER_CODE.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/ZAA/Controller/METRO_POS_MAIN_CONTROLLER_CODE.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/ZAA/Controller/Product.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/ZAA/Controller/Product.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/ZAA/Controller/Report.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/ZAA/Controller/Report.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/org/ZAA/Controller/SuperAdmin.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/ZAA/Controller/SuperAdmin.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/ZAA/Controller/Vendor.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/ZAA/Controller/Vendor.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -170,9 +158,9 @@
     <recent_temporary>
       <list>
         <item itemvalue="Spring Boot.BACKEND_SERVER" />
-        <item itemvalue="JavaScript Debug.test.html" />
         <item itemvalue="Spring Boot.METRO_POS_MAIN_CONTROLLER_CODE" />
         <item itemvalue="Spring Boot.BACKEND_APPLICATION_SERVER" />
+        <item itemvalue="JavaScript Debug.test.html" />
         <item itemvalue="Application.METRO_POS_MAIN_CONTROLLER_CODE" />
       </list>
     </recent_temporary>
@@ -202,6 +190,7 @@
       <workItem from="1732393566545" duration="252000" />
       <workItem from="1732470352276" duration="10000" />
       <workItem from="1732550134915" duration="9915000" />
+      <workItem from="1732981454481" duration="2223000" />
     </task>
     <task id="LOCAL-00001" summary="Implemented Backend Object classes and Login, Signup and Branch creation functions.">
       <option name="closed" value="true" />
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"MavenProjectsManager\">\r\n    <option name=\"originalFiles\">\r\n      <list>\r\n        <option value=\"$PROJECT_DIR$/pom.xml\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"PWA\">\r\n    <option name=\"enabled\" value=\"true\" />\r\n    <option name=\"wasEnabledAtLeastOnce\" value=\"true\" />\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_23\" default=\"true\" project-jdk-name=\"openjdk-23\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision ee8c4d4f3bca8d1e7cbe0979afdd8d863056068b)
+++ b/.idea/misc.xml	(date 1732980149233)
@@ -8,11 +8,7 @@
       </list>
     </option>
   </component>
-  <component name="PWA">
-    <option name="enabled" value="true" />
-    <option name="wasEnabledAtLeastOnce" value="true" />
-  </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_23" default="true" project-jdk-name="openjdk-23" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_23" default="true" project-jdk-name="21" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
